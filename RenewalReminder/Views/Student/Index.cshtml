@using RenewalReminder.Domain;
@model Student
@{
    ViewBag.Title = "Talebeler";
}

<div class="card mb-1 d-max-height">
    <grid class="table table-lg" url="/Student/Student_Read">
        <column for="Id" orderable="false" template="kvs.grdEdit" title="@(Html.Raw("<i class=\"fas fa-check\"></i>"))" style="width:2rem"></column>
        <column for="Number" lg-size=""></column>
        <column for="Name"></column>
        <column for="Surname"></column>
        <column for="Phone"></column>


        <filters class="m-0 p-2" column-count="4">
            <field for="Name" type="TEXT" lg-size="2" place-holder="Ara..."></field>

            <field type="BUTTON" onclick="editRecord()" class="btn btn-sm btn-warning text-nowrap ml-3">
                <i class="fas fa-plus-circle mr-1"></i> Yeni Kayıt
            </field>
        </filters>
    </grid>
</div>

@section scripts{
    <script>

        function editRecord(data) {
            var grid = this;
            if (!data) {
                grid = kvs.grid(".grid");
            }
            kvs.gotoUrl("/Student/Student_Edit/" + (data ? data.id : 0));
        }

        function deleteRecord(data) {
            var grid = this;
            kvs.confirm("Kayıt silme onay", "Kayıdı silmek istediğinize emin misiniz?", function () {
                kvs.callJx("/Student/Student_Delete", "body", { id: data.id }, function () {
                    grid.load();
                });
            });
        }

        function formatStudentType(field, data, td) {
            var value = kvs.value(data, field);
            switch (value) {
                case 1:
                    return $("<span>", { html: "Daimi Tekamülaltı" });
                    break;
                case 2:
                    return $("<span>", { html: "Üniversite Tekamülaltı" });
                    break;
                case 3:
                    return $("<span>", { html: "Mezun Tekamülaltı" });
                    break;
                default:

            }
        }
        function formatBloodGroup(field, data, td) {
            var value = kvs.value(data, field);
            switch (value) {
                case 1:
                    return $("<span>", { html: "A+" });
                    break;
                case 2:
                    return $("<span>", { html: "A-" });
                    break;
                case 3:
                    return $("<span>", { html: "B+" });
                    break;
                case 4:
                    return $("<span>", { html: "B-" });
                    break;
                case 5:
                    return $("<span>", { html: "AB+" });
                    break;
                case 6:
                    return $("<span>", { html: "AB-" });
                    break;
                case 7:
                    return $("<span>", { html: "0+" });
                case 8:
                    return $("<span>", { html: "0-" });
                default:

            }
        }

    </script>
}